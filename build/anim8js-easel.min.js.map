{"version":3,"sources":["anim8js-easel.min.js"],"names":["root","factory","define","amd","anim8","module","exports","require","global","this","window","$attribute","attr","isString","Attributes","$dynamic","nm","Dynamics","FactoryEasel","priority","attributes","AnimatorEasel","subject","reset","dynamics","FastMap","Animator","Factory","Class","Color","isObject","isArray","$calculator","calculator","defaultValue","alpha","regX","regY","rotation","scaleX","scaleY","skewX","skewY","x","y","lineHeight","letterSpacing","spaceWidth","blurX","blurY","quality","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","radius","startAngle","endAngle","cp1x","cp1y","cp2x","cp2y","w","h","width","height","sides","pointSize","angle","cpx","cpy","radiusTL","radiusTR","radiusBL","radiusBR","miterLimit","offsetX","offsetY","blur","framerate","currentAnimationFrame","style","color","cornerRadius","dynamic","brightness","contrast","saturation","hue","reg","position","offset","cp","cp1","cp2","filterBlur","size","scale","skew","filterMultiplier","filterOffset","format","adjustBrightness","adjustContrast","adjustSaturation","adjustHue","r","g","b","a","extend","is","animatorFor","animator","$animator","destroy","attribute","calculatorName","parse","ZERO","dynamicName","name","value","ignoreRelative","cloneDefault","clone","placeAttrimator","attrimator","_placeAttrimator","getAttribute","put","apply","frame","get","updated","_apply","Factories","easel"],"mappings":"CAEC,SAAUA,EAAMC,GAEO,kBAAXC,SAAyBA,OAAOC,IAGzCD,QAAQ,WAAY,SAASE,GAC3B,MAAOH,GAAQG,EAAOJ,KAGC,gBAAXK,SAAuBA,OAAOC,QAK5CD,OAAOC,QAAUL,EAAQM,QAAQ,WAAYC,QAK7CP,EAAQD,EAAKI,MAAOJ,IAEtBS,KAAM,SAASL,EAAOM,GAkJxB,QAASC,GAAWC,GAElB,MAAKC,GAAUD,IAAUA,IAAQE,GAExBA,EAAYF,GAGdE,EAAW,WA0HpB,QAASC,GAASC,GAEhB,SAAKH,EAAUG,IAAQA,IAAMC,KAEpBA,EAAUD,GAMrB,QAASE,KAEPT,KAAKU,SAAW,EAChBV,KAAKW,cA+DP,QAASC,GAAeC,GAEtBb,KAAKc,MAAOD,GACZb,KAAKe,SAAW,GAAIC,GA/VpB,GAAIA,GAAUrB,EAAMqB,QAChBC,EAAWtB,EAAMsB,SACjBC,EAAUvB,EAAMuB,QAChBC,EAAQxB,EAAMwB,MACdC,EAAQzB,EAAMyB,MACdC,EAAW1B,EAAM0B,SACjBC,EAAU3B,EAAM2B,QAChBlB,EAAWT,EAAMS,SAEjBmB,EAAc5B,EAAM6B,WAGtBnB,IAyDJA,GAAW,YAAmBoB,aAAc,GAC5CpB,EAAWqB,OAAmBD,aAAc,GAC5CpB,EAAWsB,MAAmBF,aAAc,GAC5CpB,EAAWuB,MAAmBH,aAAc,GAC5CpB,EAAWwB,UAAmBJ,aAAc,GAC5CpB,EAAWyB,QAAmBL,aAAc,GAC5CpB,EAAW0B,QAAmBN,aAAc,GAC5CpB,EAAW2B,OAAmBP,aAAc,GAC5CpB,EAAW4B,OAAmBR,aAAc,GAC5CpB,EAAW6B,GAAmBT,aAAc,GAC5CpB,EAAW8B,GAAmBV,aAAc,GAC5CpB,EAAW+B,YAAmBX,aAAc,GAC5CpB,EAAWgC,eAAmBZ,aAAc,GAC5CpB,EAAWiC,YAAmBb,aAAc,GAC5CpB,EAAWkC,OAAmBd,aAAc,GAC5CpB,EAAWmC,OAAmBf,aAAc,GAC5CpB,EAAWoC,SAAmBhB,aAAc,GAC5CpB,EAAWqC,eAAmBjB,aAAc,GAC5CpB,EAAWsC,iBAAmBlB,aAAc,GAC5CpB,EAAWuC,gBAAmBnB,aAAc,GAC5CpB,EAAWwC,iBAAmBpB,aAAc,GAC5CpB,EAAWyC,WAAmBrB,aAAc,GAC5CpB,EAAW0C,aAAmBtB,aAAc,GAC5CpB,EAAW2C,YAAmBvB,aAAc,GAC5CpB,EAAW4C,aAAmBxB,aAAc,GAC5CpB,EAAW6C,QAAmBzB,aAAc,GAC5CpB,EAAW8C,YAAmB1B,aAAc,GAC5CpB,EAAW+C,UAAmB3B,aAAc,GAC5CpB,EAAWgD,MAAmB5B,aAAc,GAC5CpB,EAAWiD,MAAmB7B,aAAc,GAC5CpB,EAAWkD,MAAmB9B,aAAc,GAC5CpB,EAAWmD,MAAmB/B,aAAc,GAC5CpB,EAAWoD,GAAmBhC,aAAc,GAC5CpB,EAAWqD,GAAmBjC,aAAc,GAC5CpB,EAAWsD,OAAmBlC,aAAc,GAC5CpB,EAAWuD,QAAmBnC,aAAc,GAC5CpB,EAAWwD,OAAmBpC,aAAc,GAC5CpB,EAAWyD,WAAmBrC,aAAc,GAC5CpB,EAAW0D,OAAmBtC,aAAc,GAC5CpB,EAAW2D,KAAmBvC,aAAc,GAC5CpB,EAAW4D,KAAmBxC,aAAc,GAC5CpB,EAAW6D,UAAmBzC,aAAc,GAC5CpB,EAAW8D,UAAmB1C,aAAc,GAC5CpB,EAAW+D,UAAmB3C,aAAc,GAC5CpB,EAAWgE,UAAmB5C,aAAc,GAC5CpB,EAAWiE,YAAmB7C,aAAc,GAC5CpB,EAAWkE,SAAmB9C,aAAc,GAC5CpB,EAAWmE,SAAmB/C,aAAc,GAC5CpB,EAAWoE,MAAmBhD,aAAc,GAC5CpB,EAAWqE,WAAmBjD,aAAc,GAC5CpB,EAAWsE,uBAAyBlD,aAAc,GAClDpB,EAAWuE,OAAmBnD,aAAcL,IAASI,WAAW,QAChEnB,EAAWwE,OAAmBpD,aAAcL,IAASI,WAAW,QAGhEnB,EAAWyE,cAAmBrD,aAAc,EAAGsD,QAAS,gBACxD1E,EAAW2E,YAAmBvD,aAAc,EAAGsD,QAAS,cACxD1E,EAAW4E,UAAmBxD,aAAc,EAAGsD,QAAS,YACxD1E,EAAW6E,YAAmBzD,aAAc,EAAGsD,QAAS,cACxD1E,EAAW8E,KAAmB1D,aAAc,EAAGsD,QAAS,OACxD1E,EAAW+E,KAAmB3D,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,OAClF1E,EAAWgF,UAAmB5D,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,YAClF1E,EAAWiF,QAAmB7D,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,UAClF1E,EAAWkF,IAAmB9D,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,MAClF1E,EAAWmF,KAAmB/D,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,OAClF1E,EAAWoF,KAAmBhE,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,OAClF1E,EAAWqF,YAAmBjE,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,cAClF1E,EAAWsF,MAAmBlE,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,QAClF1E,EAAWuF,OAAmBnE,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,SAClF1E,EAAWwF,MAAmBpE,cAAeS,EAAE,EAAGC,EAAE,GAAIX,WAAY,KAAMuD,QAAQ,QAClF1E,EAAWyF,kBAAmBrE,aAAcL,IAASI,WAAY,OAAQuD,QAAQ,oBACjF1E,EAAW0F,cAAmBtE,aAAcL,IAASI,WAAY,OAAQuD,QAAQ,eAcjF,IAAIvE,KAqQF,OAnQFA,GAASoE,MAAQ,SAASzE,EAAMU,GAE9BA,EAAQ+D,MAAQxD,EAAM4E,OAAQ7F,IAGhCK,EAASqE,MAAQ,SAAS1E,EAAMU,GAE9BA,EAAQgE,MAAQzD,EAAM4E,OAAQ7F,IAGhCK,EAASsE,aAAe,SAAS3E,EAAMU,GAErCA,EAAQqD,SAAW/D,EACnBU,EAAQsD,SAAWhE,EACnBU,EAAQuD,SAAWjE,EACnBU,EAAQwD,SAAWlE,GAGrBK,EAASwE,WAAa,SAAS7E,EAAMU,GAEnCA,EAAQoF,iBAAkB9F,IAG5BK,EAASyE,SAAW,SAAS9E,EAAMU,GAEjCA,EAAQqF,eAAgB/F,IAG1BK,EAAS0E,WAAa,SAAS/E,EAAMU,GAEnCA,EAAQsF,iBAAkBhG,IAG5BK,EAAS2E,IAAM,SAAShF,EAAMU,GAE5BA,EAAQuF,UAAWjG,IAGrBK,EAAS4E,IAAM,SAASjF,EAAMU,GAE5BA,EAAQc,KAAOxB,EAAK+B,EACpBrB,EAAQe,KAAOzB,EAAKgC,GAGtB3B,EAAS6E,SAAW,SAASlF,EAAMU,GAEjCA,EAAQqB,EAAI/B,EAAK+B,EACjBrB,EAAQsB,EAAIhC,EAAKgC,GAGnB3B,EAAS8E,OAAS,SAASnF,EAAMU,GAE/BA,EAAQ0D,QAAUpE,EAAK+B,EACvBrB,EAAQ2D,QAAUrE,EAAKgC,GAGzB3B,EAAS+E,GAAK,SAASpF,EAAMU,GAE3BA,EAAQmD,IAAM7D,EAAK+B,EACnBrB,EAAQoD,IAAM9D,EAAKgC,GAGrB3B,EAASgF,IAAM,SAASrF,EAAMU,GAE5BA,EAAQwC,KAAOlD,EAAK+B,EACpBrB,EAAQyC,KAAOnD,EAAKgC,GAGtB3B,EAASiF,IAAM,SAAStF,EAAMU,GAE5BA,EAAQ0C,KAAOpD,EAAK+B,EACpBrB,EAAQ2C,KAAOrD,EAAKgC,GAGtB3B,EAASkF,WAAa,SAASvF,EAAMU,GAEnCA,EAAQ0B,MAAQpC,EAAK+B,EACrBrB,EAAQ2B,MAAQrC,EAAKgC,GAGvB3B,EAASmF,KAAO,SAASxF,EAAMU,GAE7BA,EAAQ4C,EAAI5C,EAAQ8C,MAASxD,EAAK+B,EAClCrB,EAAQ6C,EAAI7C,EAAQ+C,OAASzD,EAAKgC,GAGpC3B,EAASoF,MAAQ,SAASzF,EAAMU,GAE9BA,EAAQiB,OAAS3B,EAAK+B,EACtBrB,EAAQkB,OAAS5B,EAAKgC,GAGxB3B,EAASqF,KAAO,SAAS1F,EAAMU,GAE7BA,EAAQmB,MAAQ7B,EAAK+B,EACrBrB,EAAQoB,MAAQ9B,EAAKgC,GAGvB3B,EAASsF,iBAAmB,SAAS3F,EAAMU,GAEzCA,EAAQ6B,cAAkBvC,EAAKkG,EAC/BxF,EAAQ8B,gBAAkBxC,EAAKmG,EAC/BzF,EAAQ+B,eAAkBzC,EAAKoG,EAC/B1F,EAAQgC,gBAAkB1C,EAAKqG,GAGjChG,EAASuF,aAAe,SAAS5F,EAAMU,GAErCA,EAAQiC,UAAc3C,EAAKkG,EAC3BxF,EAAQkC,YAAc5C,EAAKmG,EAC3BzF,EAAQmC,WAAc7C,EAAKoG,EAC3B1F,EAAQoC,YAAc9C,EAAKqG,GAqB7BrF,EAAMsF,OAAQhG,EAAcS,GAE1BwF,GAAI,SAAS7F,GAEX,MAAOQ,GAAUR,KAAcS,EAAST,IAG1C8F,YAAa,SAAS9F,GAEpB,GAAI+F,GAAW/F,EAAQgG,SAUvB,OARMD,KAEJA,EAAW,GAAIhG,GAAeC,GAC9B+F,EAASpH,QAAUQ,KAEnBa,EAAQgG,UAAYD,GAGfA,GAGTE,QAAS,SAASF,SAETA,GAAS/F,QAAQgG,WAG1BE,UAAW,SAAS5G,GAElB,GAAI4G,GAAY/G,KAAKW,WAAYR,EAEjC,KAAM4G,EACN,CACEA,EAAY/G,KAAKW,WAAYR,GAASD,EAAYC,EAElD,IAAI6G,GAAiBD,EAAUvF,WAC3BA,EAAaD,EAAayF,GAC1BvF,EAAeD,EAAWyF,MAAOF,EAAUtF,aAAcD,EAAW0F,MACpEC,EAAcJ,EAAUhC,QACxBA,EAAUzE,EAAU6G,EAExBJ,GAAUC,eAAiBA,EAC3BD,EAAUvF,WAAaA,EACvBuF,EAAUtF,aAAeA,EACzBsF,EAAUK,KAAOjH,EACjB4G,EAAUI,YAAcA,EACxBJ,EAAUhC,QAAUA,EACpBgC,EAAUE,MAAQ,SAASI,EAAOC,GAChC,MAAOtH,MAAKwB,WAAWyF,MAAOI,EAAOrH,KAAKyB,aAAc6F,IAE1DP,EAAUQ,aAAe,WACvB,MAAOvH,MAAKwB,WAAWgG,MAAOxH,KAAKyB,eAIvC,MAAOsF,MAWX5F,EAAMsF,OAAQ7F,EAAeK,GAG3BwG,gBAAiB,SAAUC,GAEzB1H,KAAK2H,iBAAkBD,EAGvB,IAAIvH,GAAOuH,EAAWX,UAClBA,EAAY/G,KAAK4H,aAAczH,GAC/B4E,EAAUgC,EAAUhC,OAOxB,OALKA,IAEH/E,KAAKe,SAAS8G,IAAK1H,EAAM4E,GAGpB/E,MAGT8H,MAAO,WAIL,IAAK,GAAI3H,KAAQH,MAAK+H,MACtB,CACE,GAAIhD,GAAU/E,KAAKe,SAASiH,IAAK7H,EAE5BH,MAAKiI,QAAS9H,IAAU4E,IAE3BA,EAAS/E,KAAK+H,MAAO5H,GAAQH,KAAKa,SAElCb,KAAKiI,QAAS9H,IAAS,GAO3B,MAFAH,MAAKkI,SAEElI,QAQTL,EAAMwI,UAAiB,MAAI,GAAI1H,GAG/Bd,EAAMiB,cAAgBA,EACtBjB,EAAMc,aAAeA,EAGrBd,EAAMyI,OACJ/H,WAAsBA,EACtB0G,UAAsB7G,EACtBM,SAAsBA,EACtBuE,QAAsBzE,GAGjBX","file":"anim8js-easel.min.js","sourcesContent":["/* anim8js-easel 1.0.3 - anim8 EaselJS (http://www.createjs.com/easeljs) by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['anim8js'], function(anim8) { // jshint ignore:line\n      return factory(anim8, root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require('anim8js'), global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    factory(root.anim8, root);\n  }\n}(this, function(anim8, window)\n{\n\n  var FastMap = anim8.FastMap;\n  var Animator = anim8.Animator;\n  var Factory = anim8.Factory;\n  var Class = anim8.Class;\n  var Color = anim8.Color;\n  var isObject = anim8.isObject;\n  var isArray = anim8.isArray;\n  var isString = anim8.isString;\n\n  var $calculator = anim8.calculator;\n\n\nvar Attributes = {};\n\n/**\n * =============================================================================\n * Attributes defined in EaselJS:\n * =============================================================================\n * DisplayObject:\n *    alpha, regX, regY, rotation, scaleX, scaleY, skewX,\n *    skewY, x, y,\n * BitmapText (DisplayObject):\n *    lineHeight, letterSpacing, spaceWidth\n * BlurFilter:\n *    blurX, blurY, quality\n * ColorFilter:\n *    redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier,\n *    redOffset, greenOffset, blueOffset, alphaOffset\n * Graphics.Arc:\n *    x, y, radius, startAngle, endAngle\n * Graphics.BezierCurveTo:\n *    cp1x, cp1y, cp2x, cp2y, x, y\n * Graphics.Circle:\n *    x, y, radius\n * Graphics.Ellipse:\n *    x, y, w, h\n * Graphics.Fill:\n *    style (color)\n * Graphics.LineTo:\n *    x, y\n * Graphics.MoveTo:\n *    x, y\n * Graphics.PolyStar:\n *    x, y, radius, sides, pointSize, angle\n * Graphics.QuadraticCurveTo:\n *    cpx, cpy, x, y\n * Graphics.Rect:\n *    x, y, w, h\n * Graphics.RoundRect:\n *    x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL\n * Graphics.Stroke:\n *    style (color)\n * Graphics.StrokeStyle:\n *    width, miterLimit\n * Point:\n *    x, y\n * Rectangle:\n *    x, y, width, height\n * Shadow:\n *    color, offsetX, offsetY, blur\n * Sprite:\n *    currentAnimationFrame, framerate\n * SpriteSheet:\n *    framerate\n * Text:\n *    color\n */\n\n// Defined\nAttributes['default']      = {defaultValue: 0};\nAttributes.alpha           = {defaultValue: 1};\nAttributes.regX            = {defaultValue: 0};\nAttributes.regY            = {defaultValue: 0};\nAttributes.rotation        = {defaultValue: 0};\nAttributes.scaleX          = {defaultValue: 1};\nAttributes.scaleY          = {defaultValue: 1};\nAttributes.skewX           = {defaultValue: 0};\nAttributes.skewY           = {defaultValue: 0};\nAttributes.x               = {defaultValue: 0};\nAttributes.y               = {defaultValue: 0};\nAttributes.lineHeight      = {defaultValue: 0};\nAttributes.letterSpacing   = {defaultValue: 0};\nAttributes.spaceWidth      = {defaultValue: 0};\nAttributes.blurX           = {defaultValue: 0};\nAttributes.blurY           = {defaultValue: 0};\nAttributes.quality         = {defaultValue: 1};\nAttributes.redMultiplier   = {defaultValue: 1};\nAttributes.greenMultiplier = {defaultValue: 1};\nAttributes.blueMultiplier  = {defaultValue: 1};\nAttributes.alphaMultiplier = {defaultValue: 1};\nAttributes.redOffset       = {defaultValue: 0};\nAttributes.greenOffset     = {defaultValue: 0};\nAttributes.blueOffset      = {defaultValue: 0};\nAttributes.alphaOffset     = {defaultValue: 0};\nAttributes.radius          = {defaultValue: 0};\nAttributes.startAngle      = {defaultValue: 0};\nAttributes.endAngle        = {defaultValue: 0};\nAttributes.cp1x            = {defaultValue: 0};\nAttributes.cp1y            = {defaultValue: 0};\nAttributes.cp2x            = {defaultValue: 0};\nAttributes.cp2y            = {defaultValue: 0};\nAttributes.w               = {defaultValue: 0};\nAttributes.h               = {defaultValue: 0};\nAttributes.width           = {defaultValue: 0};\nAttributes.height          = {defaultValue: 0};\nAttributes.sides           = {defaultValue: 0};\nAttributes.pointSize       = {defaultValue: 0};\nAttributes.angle           = {defaultValue: 0};\nAttributes.cpx             = {defaultValue: 0};\nAttributes.cpy             = {defaultValue: 0};\nAttributes.radiusTL        = {defaultValue: 0};\nAttributes.radiusTR        = {defaultValue: 0};\nAttributes.radiusBL        = {defaultValue: 0};\nAttributes.radiusBR        = {defaultValue: 0};\nAttributes.miterLimit      = {defaultValue: 0};\nAttributes.offsetX         = {defaultValue: 0};\nAttributes.offsetY         = {defaultValue: 0};\nAttributes.blur            = {defaultValue: 0};\nAttributes.framerate       = {defaultValue: 0};\nAttributes.currentAnimationFrame = {defaultValue: 0};\nAttributes.style           = {defaultValue: Color(), calculator:'rgba'};\nAttributes.color           = {defaultValue: Color(), calculator:'rgba'};\n\n// Dynamic\nAttributes.cornerRadius    = {defaultValue: 0, dynamic: 'cornerRadius'};\nAttributes.brightness      = {defaultValue: 0, dynamic: 'brightness'};\nAttributes.contrast        = {defaultValue: 0, dynamic: 'contrast'};\nAttributes.saturation      = {defaultValue: 0, dynamic: 'saturation'};\nAttributes.hue             = {defaultValue: 0, dynamic: 'hue'};\nAttributes.reg             = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'reg'};\nAttributes.position        = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'position'};\nAttributes.offset          = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'offset'};\nAttributes.cp              = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'cp'};\nAttributes.cp1             = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'cp1'};\nAttributes.cp2             = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'cp2'};\nAttributes.filterBlur      = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'filterBlur'};\nAttributes.size            = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'size'};\nAttributes.scale           = {defaultValue: {x:1, y:1}, calculator: '2d', dynamic:'scale'};\nAttributes.skew            = {defaultValue: {x:0, y:0}, calculator: '2d', dynamic:'skew'};\nAttributes.filterMultiplier= {defaultValue: Color(), calculator: 'rgba', dynamic:'filterMultiplier'};\nAttributes.filterOffset    = {defaultValue: Color(), calculator: 'rgba', dynamic:'filterOffset'};\n\n\nfunction $attribute(attr)\n{\n  if ( isString( attr ) && attr in Attributes )\n  {\n    return Attributes[ attr ];\n  }\n\n  return Attributes['default'];\n}\n\n\nvar Dynamics = {};\n\nDynamics.style = function(attr, subject)\n{\n  subject.style = Color.format( attr );\n};\n\nDynamics.color = function(attr, subject)\n{\n  subject.color = Color.format( attr );\n};\n\nDynamics.cornerRadius = function(attr, subject)\n{\n  subject.radiusTL = attr;\n  subject.radiusTR = attr;\n  subject.radiusBL = attr;\n  subject.radiusBR = attr;\n};\n\nDynamics.brightness = function(attr, subject)\n{\n  subject.adjustBrightness( attr );\n};\n\nDynamics.contrast = function(attr, subject)\n{\n  subject.adjustContrast( attr );\n};\n\nDynamics.saturation = function(attr, subject)\n{\n  subject.adjustSaturation( attr );\n};\n\nDynamics.hue = function(attr, subject)\n{\n  subject.adjustHue( attr );\n};\n\nDynamics.reg = function(attr, subject)\n{\n  subject.regX = attr.x;\n  subject.regY = attr.y;\n};\n\nDynamics.position = function(attr, subject)\n{\n  subject.x = attr.x;\n  subject.y = attr.y;\n};\n\nDynamics.offset = function(attr, subject)\n{\n  subject.offsetX = attr.x;\n  subject.offsetY = attr.y;\n};\n\nDynamics.cp = function(attr, subject)\n{\n  subject.cpx = attr.x;\n  subject.cpy = attr.y;\n};\n\nDynamics.cp1 = function(attr, subject)\n{\n  subject.cp1x = attr.x;\n  subject.cp1y = attr.y;\n};\n\nDynamics.cp2 = function(attr, subject)\n{\n  subject.cp2x = attr.x;\n  subject.cp2y = attr.y;\n};\n\nDynamics.filterBlur = function(attr, subject)\n{\n  subject.blurX = attr.x;\n  subject.blurY = attr.y;\n};\n\nDynamics.size = function(attr, subject)\n{\n  subject.w = subject.width  = attr.x;\n  subject.h = subject.height = attr.y;\n};\n\nDynamics.scale = function(attr, subject)\n{\n  subject.scaleX = attr.x;\n  subject.scaleY = attr.y;\n};\n\nDynamics.skew = function(attr, subject)\n{\n  subject.skewX = attr.x;\n  subject.skewY = attr.y;\n};\n\nDynamics.filterMultiplier = function(attr, subject)\n{\n  subject.redMultiplier   = attr.r;\n  subject.greenMultiplier = attr.g;\n  subject.blueMultiplier  = attr.b;\n  subject.alphaMultiplier = attr.a;\n};\n\nDynamics.filterOffset = function(attr, subject)\n{\n  subject.redOffset   = attr.r;\n  subject.greenOffset = attr.g;\n  subject.blueOffset  = attr.b;\n  subject.alphaOffset = attr.a;\n};\n\n\n// Dynamic Fields\nfunction $dynamic(nm)\n{\n  if ( isString( nm ) && nm in Dynamics )\n  {\n    return Dynamics[ nm ];\n  }\n\n  return false;\n}\n\nfunction FactoryEasel()\n{\n  this.priority = 3;\n  this.attributes = {};\n}\n\nClass.extend( FactoryEasel, Factory,\n{\n  is: function(subject)\n  {\n    return isObject( subject ) && !isArray( subject );\n  },\n\n  animatorFor: function(subject)\n  {\n    var animator = subject.$animator;\n\n    if ( !animator )\n    {\n      animator = new AnimatorEasel( subject );\n      animator.factory = this;\n\n      subject.$animator = animator;\n    }\n\n    return animator;\n  },\n\n  destroy: function(animator)\n  {\n    delete animator.subject.$animator;\n  },\n\n  attribute: function(attr)\n  {\n    var attribute = this.attributes[ attr ];\n\n    if ( !attribute )\n    {\n      attribute = this.attributes[ attr ] = $attribute( attr );\n\n      var calculatorName = attribute.calculator;\n      var calculator = $calculator( calculatorName );\n      var defaultValue = calculator.parse( attribute.defaultValue, calculator.ZERO );\n      var dynamicName = attribute.dynamic;\n      var dynamic = $dynamic( dynamicName );\n\n      attribute.calculatorName = calculatorName;\n      attribute.calculator = calculator;\n      attribute.defaultValue = defaultValue;\n      attribute.name = attr;\n      attribute.dynamicName = dynamicName;\n      attribute.dynamic = dynamic;\n      attribute.parse = function(value, ignoreRelative) {\n        return this.calculator.parse( value, this.defaultValue, ignoreRelative );\n      };\n      attribute.cloneDefault = function() {\n        return this.calculator.clone( this.defaultValue );\n      };\n    }\n\n    return attribute;\n  }\n});\n\n\nfunction AnimatorEasel( subject )\n{\n  this.reset( subject );\n  this.dynamics = new FastMap();\n}\n\nClass.extend( AnimatorEasel, Animator,\n{\n\n  placeAttrimator: function( attrimator )\n  {\n    this._placeAttrimator( attrimator );\n\n    // Place any dynamic function on this animator.\n    var attr = attrimator.attribute;\n    var attribute = this.getAttribute( attr );\n    var dynamic = attribute.dynamic;\n\n    if ( dynamic )\n    {\n      this.dynamics.put( attr, dynamic );\n    }\n\n    return this;\n  },\n\n  apply: function()\n  {\n    // If a dynamic attribute has been updated, call the dynamic function and\n    // mark the attribute as not needing to be updated.\n    for (var attr in this.frame)\n    {\n      var dynamic = this.dynamics.get( attr );\n\n      if ( this.updated[ attr ] && dynamic )\n      {\n        dynamic( this.frame[ attr ], this.subject );\n\n        this.updated[ attr ] = false;\n      }\n    }\n\n    // Call the parent apply\n    this._apply();\n\n    return this;\n  }\n\n});\n\n\n\n  // Register Factory\n  anim8.Factories['easel'] = new FactoryEasel();\n\n  // Classes\n  anim8.AnimatorEasel = AnimatorEasel;\n  anim8.FactoryEasel = FactoryEasel;\n\n  // Namespace\n  anim8.easel = {\n    Attributes:           Attributes,\n    attribute:            $attribute,\n    Dynamics:             Dynamics,\n    dynamic:              $dynamic\n  };\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}